openapi: 3.0.1
info:
  title: IOT API
  version: 1.0.0

servers:
 - url: http://{environment}:{port}/{basePath}{version}
   variables:
    environment:
      default: localhost    # Production server
      enum:
        - localhost         # Production server
        - api.dev     # Development server
        - api.staging # Staging server
    port:
      default: '3000'
    version:
      default: 'v1/'
      enum:
        - ''
        - 'v1/'         
    basePath:
      default: ''
      enum:
        - ''         
        - 'mobile_app/'   
        - 'ux/'
# - url: https://staging.gigantic-server.com/v1
#   description: Staging server
#   variables:
#     port:
#       default: '3000'
#     basePath:
#       default: v1
# - url: https://api.gigantic-server.com/v1
#   description: Production server
#   variables:
#     port:
#       default: '3000'
#     basePath:
#       default: v1
paths:

####################################
#           ROUTES          
####################################
######## GREET START ############
  /greet:
    x-exegesis-controller: greet/greetController
    get:
      summary: Greets the user
      x-exegesis-operationId: readMany
      tags:
        - Greet      
      responses:
        200:
          $ref: '#/components/responses/200'         
        404: 
          $ref: '#/components/responses/404'  
    post:
      summary: "Create new greet"
      x-exegesis-operationId: create
      tags:
        - Greet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/greet'
      responses:
        200:
          $ref: '#/components/responses/200'         
        404: 
          $ref: '#/components/responses/404'  
  /greet/{_id}:  
    x-exegesis-controller: greet/greetController
    put:
      summary: "Update example"
      x-exegesis-operationId: update
      tags:
        - Greet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/greet'
      parameters:
      - in: path
        name: _id
        schema:
          type: string
        required: true    
      responses:
        200:
          $ref: '#/components/responses/200'         
        404: 
          $ref: '#/components/responses/404'  
    get:
      summary: "Find example"
      description: Returns example by Id
      x-exegesis-operationId: readOne
      tags:
        - Greet
      parameters:
      - in: path
        name: _id
        schema:
          type: string
        required: true    
      responses:
        200:
          $ref: '#/components/responses/200'         
        404: 
          $ref: '#/components/responses/404'  
    delete:
      summary: "Delete example"
      x-exegesis-operationId: remove
      tags:
        - Greet
      parameters:
      - in: path
        name: _id
        schema:
          type: string
        required: true    
      responses:   
        200:
          $ref: '#/components/responses/200'         
        404: 
          $ref: '#/components/responses/404'         


######## GREET END ############



####################################
#           MODELS          
####################################
components:
  schemas: 
    greet:
      description: A greeting for the user.
      type: object
      required:
        - message
      properties:
        message:
          type: string

####### ERRORS ################
    ErrorModel:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
    ExtendedErrorModel:
      allOf:
      - $ref: '#/components/schemas/ErrorModel'
      - type: object
        required:
        - rootCause
        properties:
          rootCause:
            type: string

  responses:
    404:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    200:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/greet'


          
